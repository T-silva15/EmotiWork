@page
@model EmotiWork.Pages.QuestionnaireModel
@{
    ViewData["Title"] = "Questionário - EmotiWork";
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt-pt">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/landing.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/sidebar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/questionnaire.css" asp-append-version="true" />
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
</head>
<body class="home-body">
    <!-- Left Sidebar -->
    <aside class="sidebar-left">
        <nav class="sidebar-nav">
            <ul class="nav-items">
                <li class="nav-item">
                    <a href="/Team" class="nav-link" aria-label="Equipa">
                        <i class="fas fa-users"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/Dashboard" class="nav-link" aria-label="Dashboard">
                        <i class="fas fa-gauge-high"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/Questionnaire" class="nav-link" aria-label="Questionário">
                        <i class="fas fa-circle-question"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/Statistics" class="nav-link" aria-label="Estatísticas">
                        <i class="fas fa-chart-line"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/Notifications" class="nav-link" aria-label="Notificações">
                        <i class="fas fa-bell"></i>
                        <span class="notification-badge"></span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/Reports" class="nav-link" aria-label="Relatórios">
                        <i class="fas fa-user-secret"></i>
                    </a>
                </li>
                <li class="nav-item nav-item-bottom">
                    <a href="/Settings" class="nav-link" aria-label="Definições">
                        <i class="fas fa-gear"></i>
                    </a>
                </li>
            </ul>
        </nav>
    </aside>


    <!-- Main Content -->
    <main class="main-content">
        <!-- Top Bar -->
        <header class="top-bar">
            <div class="logo-container">
                <a href="/Home" class="logo-link">
                    <img src="~/img/emotiwork.png" alt="EmotiWork Logo" class="logo-img" />
                    <span class="logo-text">EmotiWork</span>
                </a>
            </div>
            <div class="user-info">
                <a href="/Profile" class="user-link">
                    <img src="~/img/user-avatar.png" alt="User Avatar" class="user-avatar" />
                    <span class="user-name">José</span>
                </a>
            </div>
        </header>

        <!-- Page Content -->
        <div class="content-container questionnaire-container">
            @if (Model.IsQuestionnaireSubmitted)
            {
                <!-- Show when questionnaire has already been submitted -->
                <div class="questionnaire-completed">
                    <div class="completed-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h2>Questionário já foi preenchido</h2>
                    <p>Obrigado pela sua participação! O questionário de hoje já foi preenchido.</p>
                    <p>Volte amanhã para um novo questionário.</p>
                    <a href="/Statistics" class="view-results-button">Ver Estatísticas</a>
                </div>
            }
            else
            {
                <!-- Original questionnaire content -->
                <form method="post" id="questionnaireForm">
                    @Html.AntiForgeryToken()

                    <!-- Question Navigation -->
                    <div class="question-navigation">
                        <div class="question-number active">1</div>
                        <div class="question-number">2</div>
                        <div class="question-number">3</div>
                        <div class="question-number">4</div>
                        <div class="question-number">5</div>
                    </div>

                    <!-- Question Content -->
                    <div class="question-content">
                        <div class="question-text">Como te sentiste hoje?</div>

                        <!-- Hidden inputs for all questions -->
                        <input type="hidden" name="Answers[0]" id="answer0" value="" />
                        <input type="hidden" name="Answers[1]" id="answer1" value="" />
                        <input type="hidden" name="Answers[2]" id="answer2" value="" />
                        <input type="hidden" name="Answers[3]" id="answer3" value="" />
                        <input type="hidden" name="Answers[4]" id="answer4" value="" />

                        <!-- Emotion Options -->
                        <div class="emotion-options" id="emotionOptions">
                            <div class="emotion-row">
                                <div class="emotion-option">
                                    <div class="emotion-box" data-value="Feliz" onclick="selectEmotion(this)">Feliz</div>
                                </div>
                                <div class="emotion-option">
                                    <div class="emotion-box" data-value="Impaciente" onclick="selectEmotion(this)">Impaciente</div>
                                </div>
                            </div>
                            <div class="emotion-row">
                                <div class="emotion-option">
                                    <div class="emotion-box" data-value="Nervoso" onclick="selectEmotion(this)">Nervoso</div>
                                </div>
                                <div class="emotion-option">
                                    <div class="emotion-box" data-value="Triste" onclick="selectEmotion(this)">Triste</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Navigation buttons -->
                    <div class="questionnaire-navigation">
                        <button type="button" id="prev-question" class="nav-button">&lt;</button>
                        <div class="questionnaire-title">QUESTIONÁRIO</div>
                        <button type="button" id="next-question" class="nav-button">&gt;</button>
                    </div>

                    <!-- Submit button - only visible on last question -->
                    <div class="submit-container" style="display: none;">
                        <button type="submit" id="submitButton" class="submit-button">Submeter Respostas</button>
                    </div>
                </form>
            }
        </div>

        <!-- Footer -->
        <footer class="home-footer">
            <div class="footer-content">
                <div class="copyright">EmotiWork - 2025</div>
                <div class="privacy-policy">
                    <a href="/Privacy" class="privacy-link">Proteção de Dados</a>
                </div>
            </div>
        </footer>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const questions = [
                "Como te sentiste hoje?",
                "O que causou esse sentimento?",
                "Como foi o teu dia de trabalho?",
                "Tiveste algum problema hoje?",
                "O que esperas para amanhã?"
            ];

            // Global variable accessible to onClick handlers
            window.currentQuestionIndex = 0;

            const questionNumbers = document.querySelectorAll('.question-number');
            const questionText = document.querySelector('.question-text');
            const prevButton = document.getElementById('prev-question');
            const nextButton = document.getElementById('next-question');
            const submitContainer = document.querySelector('.submit-container');
            const questionnaireForm = document.getElementById('questionnaireForm');

            // Fixed selectEmotion function
            window.selectEmotion = function(element) {
                // Get current question index from the global variable
                let questionIndex = window.currentQuestionIndex;

                // Remove selected class from all boxes
                const allBoxes = document.querySelectorAll('.emotion-box');
                allBoxes.forEach(box => box.classList.remove('selected'));

                // Add selected class to clicked box
                element.classList.add('selected');

                // Update the hidden input value for the current question
                document.getElementById(`answer${questionIndex}`).value = element.dataset.value;

                // For debugging
                console.log(`Selected: ${element.dataset.value} for question ${questionIndex}`);
            };

            // Set active question - update to handle selections for each question
            function setActiveQuestion(index) {
                // Update global variable
                window.currentQuestionIndex = index;

                // Update question numbers
                questionNumbers.forEach((num, i) => {
                    if (i === index) {
                        num.classList.add('active');
                    } else {
                        num.classList.remove('active');
                    }
                });

                // Update question text
                questionText.textContent = questions[index];

                // Clear selected option visual indicator when changing questions
                const allBoxes = document.querySelectorAll('.emotion-box');
                allBoxes.forEach(box => box.classList.remove('selected'));

                // If we have a saved answer for this question, highlight it
                const savedAnswer = document.getElementById(`answer${index}`).value;
                if (savedAnswer) {
                    const boxToSelect = document.querySelector(`.emotion-box[data-value="${savedAnswer}"]`);
                    if (boxToSelect) {
                        boxToSelect.classList.add('selected');
                    }
                }

                // Update button states
                prevButton.disabled = index === 0;
                nextButton.disabled = index === questions.length - 1;

                // Show submit button on last question
                if (index === questions.length - 1) {
                    submitContainer.style.display = 'block';
                } else {
                    submitContainer.style.display = 'none';
                }
            }

            // Navigation button event listeners
            prevButton.addEventListener('click', function() {
                if (window.currentQuestionIndex > 0) {
                    setActiveQuestion(window.currentQuestionIndex - 1);
                }
            });

            nextButton.addEventListener('click', function() {
                if (window.currentQuestionIndex < questions.length - 1) {
                    setActiveQuestion(window.currentQuestionIndex + 1);
                }
            });

            // Number navigation
            questionNumbers.forEach((num, i) => {
                num.addEventListener('click', function() {
                    setActiveQuestion(i);
                });
            });

            // Form submission validation
            questionnaireForm.addEventListener('submit', function(e) {
                // Check if all questions have answers
                let allAnswered = true;
                let firstUnanswered = -1;

                for (let i = 0; i < 5; i++) {
                    const answer = document.getElementById(`answer${i}`).value;
                    if (!answer) {
                        allAnswered = false;
                        if (firstUnanswered === -1) {
                            firstUnanswered = i;
                        }
                    }
                }

                if (!allAnswered) {
                    e.preventDefault();
                    alert('Por favor, responda a todas as perguntas antes de submeter.');
                    setActiveQuestion(firstUnanswered);
                    return false;
                }

                console.log("Form is being submitted with data:", Array.from(new FormData(questionnaireForm)));
                return true;
            });

            // Initialize
            setActiveQuestion(0);
        });
    </script>
</body>
</html>
